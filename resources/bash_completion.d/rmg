#!/bin/bash

type _comp_filter &> /dev/null || return
type _comp_contains &> /dev/null || return
type _comp_filter_shorts &> /dev/null || return

function _rmg() {

    local cur prev words cword opts args
    _init_completion || return

    _count_args "" "@(--bound-name|--build-folder|--config|--javac-path|--sample-folder|--source-folder|--threads|--template-folder)"
    COMPREPLY=()

    # If one non-optional argument was provided and we are at the last word - stop completion
    if [[ $args -eq 2 && $(($cword+1)) -eq ${#words[@]} ]]; then
        return 0
    fi

	# filename completions
	if _comp_contains "--config --build-folder --javac-path --sample-folder --source-folder --template-folder" $prev; then
        _filedir
		return 0

	# No completions
	elif _comp_contains "--bound-name --threads" $prev; then
		return 0

	# otherwise, we just complete options
	else 
		opts="clean"
		opts="$opts --bound-name"
		opts="$opts --build-folder"
		opts="$opts --classes"
		opts="$opts --config"
		opts="$opts --create-samples"
		opts="$opts --follow"
		opts="$opts --guess"
		opts="$opts --help"
		opts="$opts --javac-path"
		opts="$opts --json"
		opts="$opts --sample-folder"
		opts="$opts --source-folder"
		opts="$opts --ssl"
		opts="$opts --template-folder"
		opts="$opts --threads"
		opts="$opts --quite"
	fi

    _comp_filter "opts"
    _comp_filter_shorts "opts"

	mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
	return 0
}

complete -F _rmg rmg
