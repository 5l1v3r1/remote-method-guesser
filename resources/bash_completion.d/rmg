#!/bin/bash

type _comp_filter &> /dev/null || return
type _comp_contains &> /dev/null || return
type _comp_filter_shorts &> /dev/null || return

function _rmg() {

    local cur prev words cword opts args
    _init_completion || return

    _count_args "" "@(-b|--boundName|--buildFolder|--config|--jarPath|--javacPath|--outputFolder|--sourceFolder|-t|--threads|--templateFolder)"
    COMPREPLY=()

    # If one non-optional argument was provided and we are at the last word - stop completion
    if [[ $args -ge 2 && $(($cword+1)) -eq ${#words[@]} ]]; then
        return 0
    fi

	# filename completions
	if _comp_contains "--config --buildFolder --jarPath --javacPath --outputFolder --sourceFolder --templateFolder" $prev; then
        _filedir
		return 0

	# No completions
	elif _comp_contains "--boundName --threads" $prev; then
		return 0

	# otherwise, we just complete options
	else 
		opts="clean"
		opts="$opts -b --boundName"
		opts="$opts --buildFolder"
		opts="$opts -c --classes"
		opts="$opts --createExploits"
		opts="$opts --config"
		opts="$opts -g --guess"
		opts="$opts -j --json"
		opts="$opts --jarPath"
		opts="$opts --javacPath"
		opts="$opts --outputFolder"
		opts="$opts -q --quite"
		opts="$opts --sourceFolder"
		opts="$opts --templateFolder"
		opts="$opts -t --threads"
	fi

    _comp_filter "opts"
    _comp_filter_shorts "opts"

	mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
	return 0
}

complete -F _rmg rmg
